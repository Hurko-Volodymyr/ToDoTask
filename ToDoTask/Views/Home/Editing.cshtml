@model List<TaskModel>

<style>
    .task-form {
        display: flex;
        flex-direction: column;
        align-items: left;
        margin-bottom: 16px;
    }

        .task-form button {
            margin-top: 8px;
        }

    .task-title {
        background-color: limegreen; 
        padding: 8px;
        margin-bottom: 8px;
    }
</style>

<div class="text-center">

    <!-- Add New Task -->
    <div class="form-container" style="width: 300px; margin: 0 auto; text-align: left;">
        <h3>Add Task</h3>
        <input type="text" id="newTaskTitle" placeholder="Task title" required style="margin-bottom: 12px; padding: 8px;" class="form-element" />

        <label for="newTaskIsDone" style="margin-right: 8px;">Is Completed:</label>
        <input type="checkbox" id="newTaskIsDone" class="form-element" />

        <button type="button" onclick="addTask()" style="padding: 8px;">Add Task</button>
        <p id="errorText" style="color: red; display: none; margin-top: 8px;">Task title cannot be empty</p>
        <div class="clear-both"></div>
    </div>
    <div style="width: 300px; margin: 0 auto; text-align: left;">
        <h1></h1>
    </div>

    <!-- Edit Task -->
    <div style="width: 300px; margin: 0 auto; text-align: left;">
        <h2>Edit Task</h2>

        <form id="editTaskForm" style="display: flex; flex-direction: column; align-items: left;">
            <label for="editTaskTitle" style="margin-bottom: 8px;">Task Title:</label>
            <input type="text" id="editTaskTitle" placeholder="Task title" required style="margin-bottom: 12px; padding: 8px;" />

            <label for="editTaskNewTitle" style="margin-bottom: 8px;">New Task Title:</label>
            <input type="text" id="editTaskNewTitle" placeholder="New task title" required style="margin-bottom: 12px; padding: 8px;" />

            <div style="display: flex; align-items: center; margin-bottom: 12px;">
                <label for="editTaskIsDone" style="margin-right: 8px;">Is Done:</label>
                <input type="checkbox" id="editTaskIsDone" />
            </div>

            <button type="button" onclick="editTask()" style="padding: 8px;">Edit Task</button>
            <p id="editErrorText" style="color: red; display: none; margin-top: 8px;">Task title cannot be empty</p>
            <div style="width: 300px; margin: 0 auto; text-align: left;">
                <h1></h1>
            </div>
        </form>
    </div>


    <!-- Delete Task -->
    <div class="task-form" style="width: 300px; margin: 0 auto; text-align: left;">
        <h3>Delete Task</h3>
        <form id="deleteTaskForm">
            <input type="text" id="deleteTaskTitle" placeholder="Task title" required style="margin-bottom: 12px; padding: 8px;" />
            <button type="button" onclick="deleteTask()">Delete Task</button>
            <p id="deleteErrorText" style="color: red; display: none; margin-top: 8px;">Task title cannot be empty</p>
        </form>
    </div>
</div>

<script>
    function addTask() {
        var newTaskTitle = document.getElementById("newTaskTitle").value;
        var newTaskIsCompleted = document.getElementById("newTaskIsDone").checked;

        if (newTaskTitle.trim() === "") {
            document.getElementById("errorText").style.display = "block";
        } else {
            document.getElementById("errorText").style.display = "none";

            fetch("/Home/AddTask", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: "title=" + encodeURIComponent(newTaskTitle) + "&isCompleted=" + newTaskIsCompleted
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.text();
                })
                .then(() => {
                    location.reload();
                })
                .catch(error => {
                    console.error("There was a problem with the fetch operation:", error);
                });
        }
    }
    function editTask() {
        var title = document.getElementById("editTaskTitle").value;
        var newTitle = document.getElementById("editTaskNewTitle").value;
        var isDone = document.getElementById("editTaskIsDone").checked;

        console.log("Sending data:", { title, newTitle, isDone });

        fetch("/Home/EditTask", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: "title=" + encodeURIComponent(title) + "&newTitle=" + encodeURIComponent(newTitle) + "&isCompleted=" + isDone
        })
            .then(response => response.json())  
            .then(data => {
                if (data.success) {
                    console.log("Task edited successfully:", data.editedTask);
                    location.reload();
                } else {
                    console.error("Failed to edit task. Server response:", data);
                }
            })
            .catch(error => {
                console.error("There was a problem with the fetch operation:", error);
            });
    }




    function deleteTask() {
        var title = document.getElementById("deleteTaskTitle").value;

        fetch("/Home/DeleteTask", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: "title=" + encodeURIComponent(title)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    resultMessage.textContent = "Task deleted successfully: " + data.deletedTask;
                } else {
                    resultMessage.textContent = "Failed to delete task.";
                }
            })
            .catch(error => {
                console.error("There was a problem with the fetch operation:", error);
            });
    }




</script>
